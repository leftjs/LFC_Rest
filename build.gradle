buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath(
				"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
//				"com.bmuschko:gradle-tomcat-plugin:2.2.5"
		)


	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.2"
}



//apply plugin: 'java'
//apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
//apply plugin: 'com.bmuschko.tomcat'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
//	dev
	providedRuntime
//	tomcat
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('io.jsonwebtoken:jjwt:0.7.0')
    compile('org.springframework.boot:spring-boot-starter-aop')
	providedCompile('javax.servlet:servlet-api:2.5')
	runtime('javax.servlet:jstl:1.1.2')

//	def tomcatVersion = '7.0.76'
//	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
//			"org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
//			"org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
//
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')
//	dev("org.springframework.boot:spring-boot-devtools")
    runtime('com.microsoft.sqlserver:mssql-jdbc')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}


bootRun {
	// Use Spring Boot DevTool only when we run Gradle bootRun task
//	classpath = sourceSets.main.runtimeClasspath + configurations.dev
}


ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
//	outputDir "build/asciidoc"
	dependsOn test
	sourceDir 'src/main/asciidoc'
}

war {
	baseName = 'lfc'
	version = '1.0.0-SNAPSHOT'
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'docs'
	}
}

//jar {
//	baseName = 'lfc'
//	version = '1.0.0-SNAPSHOT'
//	dependsOn asciidoctor
//	from ("${asciidoctor.outputDir}/html5") {
//		into 'docs'
//	}
//}


//war {
//	baseName = 'hello'
//}